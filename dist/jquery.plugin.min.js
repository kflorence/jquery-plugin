/**
 * @fileOverview jQuery.plugin
 * A lightweight jQuery plugin factory.
 *
 * @author Kyle Florence
 * @website http://github.com/kflorence/jquery-plugin/
 * @version 0.2.0
 *
 * Based on jQuery.ui.widget - http://jqueryui.com
 *
 * Copyright (c) 2010 Kyle Florence
 * Dual licensed under the MIT and GPL Licenses.
 */
(function($){var aps=Array.prototype.slice;$.plugin=function(name,plugin,defaults){function create(element,args){var instance,options;$.data(element,name,instance=$.extend(true,{element:element,options:{}},plugin));if(typeof(options=args[0])==="object"){instance.options=$.extend(true,instance.options,$.fn[name].options,options)}if($.isFunction(instance._init)){instance._init.apply(instance,args)}return instance}$.expr[":"][name]=function(element){return !!$.data(element,name)};$.fn[name]=function(options){var result;if($.isFunction(plugin)){var args=aps.call(arguments);args.unshift($.extend(true,{},$.fn[name].options,options));result=plugin.apply(this,args)}else{if(typeof plugin==="object"){var haveMethod=typeof options==="string",method=haveMethod?options:name,args=aps.call(arguments,haveMethod?1:0);this.each(function(){var instance=$.data(this,name)||create(this,args);if(method.charAt(0)!=="_"&&$.isFunction(instance[method])){return(result=instance[method].apply(instance,args))!==undefined}})}}return result!==undefined?result:this};$.fn[name].options="options" in plugin&&typeof plugin.options==="object"?plugin.options:(typeof defaults==="object"?defaults:{})}})(jQuery);
